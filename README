To do:

Immediate Goals
- don't assume that the films have already been inputted - modify application to accommodate
    - update results page - the form part for each result needs changing
- Location of the film
    - find out about setting specific constraints such as "home"
- make search by title and i'm feeling lucky prevelant throughout the whole site
- make sure nav is throughout the site
    - find out about include

Future
- Suggested films based on viewing habits
    - dominace of particular actor or genre then it would suggest films
    - suggested films in a sidebar that you could rent or buy online
- refactor database class - a lot of repitition can probably be reduced
- suggest films you may own - looks at most popular actors and genres from your collection
    - each film comes with a public suggested films json file from rotten tomatoes which may be useful
- pagination for search results
- release date both from oldest and newest 
- make sure all database connections are closed after use to free up memory

Far future
- look into php templating
- facebook integration
- twitter integration

Even further
- converting back end to node?
- different users
- mysql injection prevention
- feedback form
- functionality specification


Rotten Tomatoes Application Details
rotten tomatoes key - wje47anurr2v5f4kv9e3ppjy
http://api.rottentomatoes.com/api/public/v1.0.json?apikey=wje47anurr2v5f4kv9e3ppjy - base url


List of films for testing
Taken
The Last Samurai
500 Days of Summer
Collateral
War of the Worlds
No Country For Old Men
Star Trek
Rare Exports: A Christmas Tale
The Lives of Others
Crouching Tiger Hidden Dragon
The Girl With The Dragon Tattoo
300
Dejavu
Die Hard
Hancock
Black Hawk Down
Blade Runner
Superman Returns
Alien vs Predator
Ace Ventura Pet Detective
Jumanji
Spider Man 2
Big Fish
The Aviator
Australia
The Butterfly Effect
Cast Away
Borat